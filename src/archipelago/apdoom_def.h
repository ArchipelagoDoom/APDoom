// This file is auto generated. More info: https://github.com/Daivuk/apdoom
#pragma once

#include <map>

const std::map<int /* ep */, std::map<int /* map */, std::map<int /* index */, int64_t /* loc id */>>> location_table = {
    {1, {
        {1, {
            {13, 23320},
            {68, 23321},
            {98, 23322},
        }},
        {2, {
            {4, 23323},
            {5, 23324},
            {20, 23325},
            {22, 23326},
            {25, 23327},
            {41, 23328},
            {43, 23329},
            {53, 23330},
            {119, 23331},
            {139, 23332},
            {200, 23333},
        }},
        {3, {
            {8, 23334},
            {9, 23335},
            {18, 23336},
            {19, 23337},
            {64, 23338},
            {77, 23339},
            {85, 23340},
            {107, 23341},
            {109, 23342},
            {112, 23343},
            {259, 23344},
            {260, 23345},
            {261, 23346},
            {265, 23347},
            {323, 23348},
        }},
        {4, {
            {11, 23349},
            {39, 23350},
            {61, 23351},
            {62, 23352},
            {63, 23353},
            {64, 23354},
            {100, 23355},
            {107, 23356},
            {129, 23357},
        }},
        {5, {
            {4, 23358},
            {10, 23359},
            {11, 23360},
            {60, 23361},
            {75, 23362},
            {83, 23363},
            {167, 23364},
            {169, 23365},
            {173, 23366},
            {174, 23367},
            {176, 23368},
            {206, 23369},
            {208, 23370},
            {279, 23371},
            {280, 23372},
            {282, 23373},
        }},
        {6, {
            {4, 23374},
            {5, 23375},
            {9, 23376},
            {10, 23377},
            {22, 23378},
            {23, 23379},
            {24, 23380},
            {63, 23381},
            {64, 23382},
            {81, 23383},
            {82, 23384},
            {123, 23385},
            {124, 23386},
            {131, 23387},
            {214, 23388},
            {291, 23389},
            {381, 23390},
            {392, 23391},
            {395, 23392},
        }},
        {7, {
            {18, 23393},
            {20, 23394},
            {21, 23395},
            {25, 23396},
            {26, 23397},
            {27, 23398},
            {53, 23399},
            {87, 23400},
            {122, 23401},
            {309, 23402},
            {310, 23403},
            {311, 23404},
            {312, 23405},
            {314, 23406},
            {337, 23407},
        }},
        {8, {
            {15, 23408},
            {49, 23409},
            {52, 23410},
            {53, 23411},
            {65, 23412},
            {70, 23413},
            {94, 23414},
        }},
        {9, {
            {13, 23415},
            {20, 23416},
            {87, 23417},
            {139, 23418},
            {172, 23419},
            {188, 23420},
            {222, 23421},
            {223, 23422},
            {225, 23423},
        }},
    }},
    {2, {
        {1, {
            {44, 23424},
            {51, 23425},
            {54, 23426},
            {57, 23427},
            {83, 23428},
            {84, 23429},
            {86, 23430},
            {99, 23431},
        }},
        {2, {
            {8, 23432},
            {9, 23433},
            {20, 23434},
            {66, 23435},
            {80, 23436},
            {81, 23437},
            {100, 23438},
            {109, 23439},
            {125, 23440},
            {127, 23441},
            {138, 23442},
            {143, 23443},
            {144, 23444},
            {153, 23445},
            {160, 23446},
            {161, 23447},
            {165, 23448},
            {250, 23449},
            {291, 23450},
        }},
        {3, {
            {12, 23451},
            {37, 23452},
            {40, 23453},
            {57, 23454},
            {67, 23455},
            {87, 23456},
            {90, 23457},
            {110, 23458},
            {113, 23459},
            {221, 23460},
            {223, 23461},
        }},
        {4, {
            {7, 23462},
            {8, 23463},
            {39, 23464},
            {40, 23465},
            {74, 23466},
            {86, 23467},
            {107, 23468},
            {109, 23469},
            {129, 23470},
            {130, 23471},
            {159, 23472},
            {174, 23473},
            {175, 23474},
            {186, 23475},
            {189, 23476},
            {244, 23477},
        }},
        {5, {
            {3, 23478},
            {53, 23479},
            {57, 23480},
            {69, 23481},
            {79, 23482},
            {109, 23483},
            {176, 23484},
            {197, 23485},
            {233, 23486},
            {256, 23487},
        }},
        {6, {
            {10, 23488},
            {13, 23489},
            {26, 23490},
            {39, 23491},
            {48, 23492},
            {49, 23493},
            {57, 23494},
            {125, 23495},
            {142, 23496},
            {143, 23497},
            {173, 23498},
            {217, 23499},
            {220, 23500},
            {230, 23501},
            {232, 23502},
            {286, 23503},
            {320, 23504},
        }},
        {7, {
            {29, 23505},
            {49, 23506},
            {79, 23507},
            {94, 23508},
            {128, 23509},
            {131, 23510},
            {140, 23511},
            {141, 23512},
            {142, 23513},
            {146, 23514},
            {160, 23515},
            {174, 23516},
            {199, 23517},
            {200, 23518},
            {201, 23519},
            {203, 23520},
        }},
        {8, {
            {16, 23521},
            {17, 23522},
            {18, 23523},
            {36, 23524},
        }},
        {9, {
            {18, 23525},
            {27, 23526},
            {28, 23527},
            {29, 23528},
            {30, 23529},
            {31, 23530},
            {32, 23531},
            {33, 23532},
            {34, 23533},
            {35, 23534},
            {36, 23535},
            {44, 23536},
        }},
    }},
    {3, {
        {1, {
            {20, 23537},
            {46, 23538},
        }},
        {2, {
            {32, 23539},
            {37, 23540},
            {76, 23541},
            {77, 23542},
            {80, 23543},
            {88, 23544},
            {154, 23545},
            {181, 23546},
            {182, 23547},
        }},
        {3, {
            {11, 23548},
            {14, 23549},
            {22, 23550},
            {23, 23551},
            {26, 23552},
            {49, 23553},
            {66, 23554},
            {73, 23555},
            {85, 23556},
            {88, 23557},
            {92, 23558},
            {113, 23559},
            {118, 23560},
            {183, 23561},
        }},
        {4, {
            {5, 23562},
            {15, 23563},
            {17, 23564},
            {46, 23565},
            {51, 23566},
            {87, 23567},
            {100, 23568},
            {114, 23569},
            {121, 23570},
            {134, 23571},
            {160, 23572},
            {170, 23573},
            {182, 23574},
            {206, 23575},
            {220, 23576},
            {242, 23577},
            {243, 23578},
            {318, 23579},
        }},
        {5, {
            {54, 23580},
            {55, 23581},
            {86, 23582},
            {87, 23583},
            {89, 23584},
            {90, 23585},
            {126, 23586},
            {129, 23587},
            {133, 23588},
            {180, 23589},
            {187, 23590},
            {190, 23591},
            {218, 23592},
            {285, 23593},
        }},
        {6, {
            {38, 23594},
            {53, 23595},
            {90, 23596},
            {100, 23597},
            {103, 23598},
            {104, 23599},
            {105, 23600},
            {168, 23601},
            {180, 23602},
            {206, 23603},
            {207, 23604},
            {249, 23605},
            {250, 23606},
            {251, 23607},
            {267, 23608},
            {273, 23609},
            {326, 23610},
        }},
        {7, {
            {22, 23611},
            {49, 23612},
            {51, 23613},
            {57, 23614},
            {60, 23615},
            {65, 23616},
            {67, 23617},
            {69, 23618},
            {83, 23619},
            {112, 23620},
            {128, 23621},
        }},
        {8, {
            {7, 23622},
            {8, 23623},
            {34, 23624},
        }},
        {9, {
            {20, 23625},
            {46, 23626},
            {99, 23627},
            {101, 23628},
            {108, 23629},
            {114, 23630},
            {120, 23631},
            {121, 23632},
            {122, 23633},
            {135, 23634},
            {138, 23635},
            {139, 23636},
            {140, 23637},
            {141, 23638},
            {143, 23639},
            {188, 23640},
        }},
    }},
};

// Map item id
struct ap_item_t
{
    int doom_type;
    int ep; // If doom_type is a keycard
    int map; // If doom_type is a keycard
};

const std::map<int64_t, ap_item_t> item_doom_type_table = {
    {350000, {-1, -1, -1}},
    {350001, {2026, -1, -1}},
    {350002, {-1, -1, -1}},
    {350003, {13, 1, 2}},
    {350004, {2026, -1, -1}},
    {350005, {-1, -1, -1}},
    {350006, {6, 1, 3}},
    {350007, {5, 1, 3}},
    {350008, {2026, -1, -1}},
    {350009, {-1, -1, -1}},
    {350010, {6, 1, 4}},
    {350011, {5, 1, 4}},
    {350012, {2026, -1, -1}},
    {350013, {-1, -1, -1}},
    {350014, {5, 1, 5}},
    {350015, {6, 1, 5}},
    {350016, {2026, -1, -1}},
    {350017, {-1, -1, -1}},
    {350018, {5, 1, 6}},
    {350019, {13, 1, 6}},
    {350020, {6, 1, 6}},
    {350021, {2026, -1, -1}},
    {350022, {-1, -1, -1}},
    {350023, {6, 1, 7}},
    {350024, {5, 1, 7}},
    {350025, {13, 1, 7}},
    {350026, {2026, -1, -1}},
    {350027, {-1, -1, -1}},
    {350028, {2026, -1, -1}},
    {350029, {-1, -1, -1}},
    {350030, {6, 1, 9}},
    {350031, {13, 1, 9}},
    {350032, {5, 1, 9}},
    {350033, {2026, -1, -1}},
    {350034, {-1, -1, -1}},
    {350035, {5, 2, 1}},
    {350036, {13, 2, 1}},
    {350037, {2026, -1, -1}},
    {350038, {-1, -1, -1}},
    {350039, {5, 2, 2}},
    {350040, {6, 2, 2}},
    {350041, {13, 2, 2}},
    {350042, {2026, -1, -1}},
    {350043, {-1, -1, -1}},
    {350044, {5, 2, 3}},
    {350045, {2026, -1, -1}},
    {350046, {-1, -1, -1}},
    {350047, {5, 2, 4}},
    {350048, {6, 2, 4}},
    {350049, {2026, -1, -1}},
    {350050, {-1, -1, -1}},
    {350051, {2026, -1, -1}},
    {350052, {-1, -1, -1}},
    {350053, {40, 2, 6}},
    {350054, {39, 2, 6}},
    {350055, {38, 2, 6}},
    {350056, {2026, -1, -1}},
    {350057, {-1, -1, -1}},
    {350058, {13, 2, 7}},
    {350059, {6, 2, 7}},
    {350060, {5, 2, 7}},
    {350061, {2026, -1, -1}},
    {350062, {-1, -1, -1}},
    {350063, {2026, -1, -1}},
    {350064, {-1, -1, -1}},
    {350065, {40, 2, 9}},
    {350066, {38, 2, 9}},
    {350067, {39, 2, 9}},
    {350068, {2026, -1, -1}},
    {350069, {-1, -1, -1}},
    {350070, {2026, -1, -1}},
    {350071, {-1, -1, -1}},
    {350072, {40, 3, 2}},
    {350073, {2026, -1, -1}},
    {350074, {-1, -1, -1}},
    {350075, {40, 3, 3}},
    {350076, {2026, -1, -1}},
    {350077, {-1, -1, -1}},
    {350078, {40, 3, 4}},
    {350079, {39, 3, 4}},
    {350080, {38, 3, 4}},
    {350081, {2026, -1, -1}},
    {350082, {-1, -1, -1}},
    {350083, {40, 3, 5}},
    {350084, {39, 3, 5}},
    {350085, {2026, -1, -1}},
    {350086, {-1, -1, -1}},
    {350087, {40, 3, 6}},
    {350088, {2026, -1, -1}},
    {350089, {-1, -1, -1}},
    {350090, {40, 3, 7}},
    {350091, {38, 3, 7}},
    {350092, {39, 3, 7}},
    {350093, {2026, -1, -1}},
    {350094, {-1, -1, -1}},
    {350095, {2026, -1, -1}},
    {350096, {-1, -1, -1}},
    {350097, {40, 3, 9}},
    {350098, {38, 3, 9}},
    {350099, {2026, -1, -1}},
    {350100, {2018, -1, -1}},
    {350101, {2019, -1, -1}},
    {350102, {2023, -1, -1}},
    {350103, {2022, -1, -1}},
    {350104, {2024, -1, -1}},
    {350105, {2013, -1, -1}},
    {350106, {8, -1, -1}},
    {350107, {2001, -1, -1}},
    {350108, {2003, -1, -1}},
    {350109, {2004, -1, -1}},
    {350110, {2005, -1, -1}},
    {350111, {2002, -1, -1}},
    {350112, {2002, -1, -1}},
    {350113, {2006, -1, -1}},
    {350114, {2012, -1, -1}},
    {350115, {2048, -1, -1}},
    {350116, {2046, -1, -1}},
    {350117, {2049, -1, -1}},
    {350118, {17, -1, -1}},
};
