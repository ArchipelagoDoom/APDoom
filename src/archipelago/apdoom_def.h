// This file is auto generated. More info: https://github.com/Daivuk/apdoom
#pragma once

#include <map>

const std::map<int /* ep */, std::map<int /* map */, std::map<int /* index */, int64_t /* loc id */>>> location_table = {
    {1, {
        {1, {
            {13, 23320},
            {68, 23321},
            {98, 23322},
        }},
        {2, {
            {4, 23323},
            {5, 23324},
            {20, 23325},
            {22, 23326},
            {25, 23327},
            {41, 23328},
            {43, 23329},
            {53, 23330},
            {119, 23331},
            {139, 23332},
            {200, 23333},
        }},
        {3, {
            {8, 23334},
            {9, 23335},
            {18, 23336},
            {19, 23337},
            {64, 23338},
            {77, 23339},
            {85, 23340},
            {107, 23341},
            {109, 23342},
            {112, 23343},
            {259, 23344},
            {260, 23345},
            {261, 23346},
            {265, 23347},
            {323, 23348},
        }},
        {4, {
            {11, 23349},
            {39, 23350},
            {61, 23351},
            {62, 23352},
            {63, 23353},
            {64, 23354},
            {100, 23355},
            {107, 23356},
            {129, 23357},
        }},
        {5, {
            {4, 23358},
            {10, 23359},
            {11, 23360},
            {60, 23361},
            {75, 23362},
            {83, 23363},
            {167, 23364},
            {169, 23365},
            {173, 23366},
            {174, 23367},
            {176, 23368},
            {206, 23369},
            {208, 23370},
            {279, 23371},
            {280, 23372},
            {282, 23373},
        }},
        {6, {
            {4, 23374},
            {5, 23375},
            {9, 23376},
            {10, 23377},
            {22, 23378},
            {23, 23379},
            {24, 23380},
            {63, 23381},
            {64, 23382},
            {81, 23383},
            {82, 23384},
            {123, 23385},
            {124, 23386},
            {131, 23387},
            {214, 23388},
            {291, 23389},
            {381, 23390},
            {392, 23391},
            {395, 23392},
        }},
        {7, {
            {18, 23393},
            {20, 23394},
            {21, 23395},
            {25, 23396},
            {26, 23397},
            {27, 23398},
            {53, 23399},
            {87, 23400},
            {122, 23401},
            {309, 23402},
            {310, 23403},
            {311, 23404},
            {312, 23405},
            {314, 23406},
            {337, 23407},
        }},
        {8, {
            {15, 23408},
            {49, 23409},
            {52, 23410},
            {53, 23411},
            {65, 23412},
            {70, 23413},
            {94, 23414},
        }},
        {9, {
            {13, 23415},
            {20, 23416},
            {87, 23417},
            {139, 23418},
            {172, 23419},
            {188, 23420},
            {222, 23421},
            {223, 23422},
            {225, 23423},
        }},
    }},
};

// Map item id
struct ap_item_t
{
    int doom_type;
    int ep; // If doom_type is a keycard
    int map; // If doom_type is a keycard
};

const std::map<int64_t, ap_item_t> item_doom_type_table = {
    {350000, {-1, -1, -1}},
    {350001, {2026, -1, -1}},
    {350002, {-1, -1, -1}},
    {350003, {13, 1, 2}},
    {350004, {2026, -1, -1}},
    {350005, {-1, -1, -1}},
    {350006, {6, 1, 3}},
    {350007, {5, 1, 3}},
    {350008, {2026, -1, -1}},
    {350009, {-1, -1, -1}},
    {350010, {6, 1, 4}},
    {350011, {5, 1, 4}},
    {350012, {2026, -1, -1}},
    {350013, {-1, -1, -1}},
    {350014, {5, 1, 5}},
    {350015, {6, 1, 5}},
    {350016, {2026, -1, -1}},
    {350017, {-1, -1, -1}},
    {350018, {5, 1, 6}},
    {350019, {13, 1, 6}},
    {350020, {6, 1, 6}},
    {350021, {2026, -1, -1}},
    {350022, {-1, -1, -1}},
    {350023, {6, 1, 7}},
    {350024, {5, 1, 7}},
    {350025, {13, 1, 7}},
    {350026, {2026, -1, -1}},
    {350027, {-1, -1, -1}},
    {350028, {2026, -1, -1}},
    {350029, {-1, -1, -1}},
    {350030, {6, 1, 9}},
    {350031, {13, 1, 9}},
    {350032, {5, 1, 9}},
    {350033, {2026, -1, -1}},
    {350034, {2018, -1, -1}},
    {350035, {2019, -1, -1}},
    {350036, {2023, -1, -1}},
    {350037, {2022, -1, -1}},
    {350038, {2024, -1, -1}},
    {350039, {2013, -1, -1}},
    {350040, {8, -1, -1}},
    {350041, {2001, -1, -1}},
    {350042, {2003, -1, -1}},
    {350043, {2005, -1, -1}},
    {350044, {2002, -1, -1}},
    {350045, {2012, -1, -1}},
    {350046, {2048, -1, -1}},
    {350047, {2046, -1, -1}},
    {350048, {2049, -1, -1}},
};
