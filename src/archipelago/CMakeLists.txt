project(archipelago)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# -----------------------------------------------------------------------------
# autodefs.hpp generation

set(autodefs_line_size 120) # Won't be exactly 120 chars due to need to escape
set(autodefs_count 1)
set(autodefs_real_count 0)
set(autodefs_init "{\n")

file(GLOB included_game_defs CONFIGURE_DEPENDS defs/*.json)

foreach(def_location ${included_game_defs})
    get_filename_component(def_name ${def_location} NAME_WE)
    file(READ ${def_location} def_content)
    string(REPLACE "\r" "" def_content ${def_content})
    string(REPLACE "\n" "" def_content ${def_content})
    string(LENGTH ${def_content} def_length)

	string(APPEND autodefs_init "\t{\n")
	string(APPEND autodefs_init "\t\t\"" ${def_name} "\",\n")
    foreach(offset RANGE 0 ${def_length} ${autodefs_line_size})
        string(SUBSTRING ${def_content} ${offset} ${autodefs_line_size} line)
        string(REPLACE "\"" "\\\"" line ${line})
        string(APPEND autodefs_init "\t\t\"" ${line} "\"\n")
    endforeach()
    string(APPEND autodefs_init "\t},\n")
    math(EXPR autodefs_count "${autodefs_count}+1")
    math(EXPR autodefs_real_count "${autodefs_count}-1")
    message(STATUS "autodefs.hpp: Including " ${def_name} " from " ${def_location})
endforeach()
string(APPEND autodefs_init "\t{NULL, NULL}\n")
string(APPEND autodefs_init "}")

set(autodefs_hpp "// Do not modify this file!
// It is automatically generated by the CMake build system
#ifndef __AUTODEFS_HPP__
#define __AUTODEFS_HPP__

const struct {
\tconst char *name\;
\tconst char *raw_json\;
} autodefs[${autodefs_count}] = ${autodefs_init}\;

#endif // __AUTODEFS_HPP__
")
file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/autodefs.hpp ${autodefs_hpp})
message(STATUS "autodefs.hpp: " ${autodefs_real_count} " total files included")
set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS ${included_game_defs})

# -----------------------------------------------------------------------------

add_subdirectory(../../APCpp APCpp)
add_library(${PROJECT_NAME} 
    apdoom.cpp      apdoom.h
    apdoom_pwad.cpp apdoom_pwad.hpp
                    autodefs.hpp
)
target_include_directories(${PROJECT_NAME} PRIVATE ../../APCpp)
target_link_libraries(${PROJECT_NAME} APCpp)
